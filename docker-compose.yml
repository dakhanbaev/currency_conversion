version: "3"
services:

  api:
    image: api
    container_name: api
    volumes:
      - shared-data:/src/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["./entrypoint.sh"]
    ports:
      - "8000:8000"

  db:
    image: postgres:14.1-alpine
    container_name: db
    env_file:
      - .env
    ports:
      - "5432:5432"
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    container_name: redis
    env_file:
      - .env
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  celery:
    container_name: celery
    build: .
    volumes:
      - shared-data:/src/uploads
    command: celery -A src.celery_app worker -B -l INFO
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  shared-data:
